//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

/// 
/// This class was created from file C:\Users\mouginot\Desktop\sirius\branches\MouginotJuly\Code\SiriusQuality-EnergyBalanceComponent\XML\SiriusQualityEnergyBalance_EnergyBalanceState.xml
/// The tool used was: DCC - Domain Class Coder, http://components.biomamodelling.org/, DCC
/// 
/// MyName MyLastname
/// myemail@mydomain.com
/// MyInstitution
/// www.myinstitution.org
/// 
/// 28/11/2016 5:46:36 PM
/// 
namespace SiriusQualityEnergyBalance
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using CRA.ModelLayer.Core;
    using CRA.ModelLayer.ParametersManagement;
    
    
    /// <summary>EnergyBalanceState Domain class contains the accessors to values</summary>
    [Serializable()]
    public class EnergyBalanceState : ICloneable, IDomainClass
    {
        
        #region Private fields
        private double _deficitOnTopLayers;
        
        private double _minTair;
        
        private double _maxTair;
        
        private double[] _hourlyTemp = new double[24];
        
        private double _solarRadiation;
        
        private double _extraSolarRadiation;
        
        private double _vaporPressure;
        
        private double _tau;
        
        private double _hslope;
        
        private double _plantHeight;
        
        private double _wind;
        
        private double _VPDair;
        
        private int _isWindVpDefined;
        
        private double _elevation;
        
        private double _netRadiation;
        
        private double _diffusionLimitedEvaporation;
        
        private double _energyLimitedEvaporation;
        
        private double _evapoTranspirationPriestlyTaylor;
        
        private double _evapoTranspirationPenman;
        
        private double _potentialTranspiration;
        
        private double _conductance;
        
        private double _soilEvaporation;
        
        private double _potentialEvapoTranspiration;
        
        private double _soilHeatFlux;
        
        private double _cropHeatFlux;
        
        private double _minCanopyTemperature;
        
        private double _maxCanopyTemperature;
        
        private double[] _hourlyCanopyTemperature = new double[24];
        
        private double _evapoTranspiration;
        
        private double[] _hourlyVPDair = new double[24];
        
        private double[] _hourlySolarRadiation = new double[24];
        
        private double _wc3cm;
        
        private double _Ntip;
        
        private double _netRadiationEquivalentEvaporation;
        
        private double[] _RH = new double[24];
        
        private double[] _hourlyVPDairLeaf = new double[24];
        
        private double[] _VPDeq = new double[24];
        #endregion
        
        #region Private field for properties
        private ParametersIO _parametersIO;
        #endregion
        
        #region Constructor
        /// <summary>No parameters constructor</summary>
        public EnergyBalanceState()
        {
            _parametersIO = new ParametersIO(this);
        }

        /// <summary>Copy constructor</summary>
        public EnergyBalanceState(EnergyBalanceState toCopy, bool copyAll)
        {
            _parametersIO = new ParametersIO(this);
            if (copyAll) //by default nothing is copied to improve performances ( only the output needed to be saved must be copied)
            {
                _deficitOnTopLayers = toCopy._deficitOnTopLayers;

                _minTair = toCopy._minTair;

                _maxTair = toCopy._maxTair;

                _solarRadiation = toCopy._solarRadiation;

                _extraSolarRadiation = toCopy._extraSolarRadiation;

                _vaporPressure = toCopy._vaporPressure;

                _tau = toCopy._tau;

                _hslope = toCopy._hslope;

                _plantHeight = toCopy._plantHeight;

                _wind = toCopy._wind;

                _VPDair = toCopy._VPDair;

                _isWindVpDefined = toCopy._isWindVpDefined;

                _elevation = toCopy._elevation;

                _netRadiation = toCopy._netRadiation;

                _diffusionLimitedEvaporation = toCopy._diffusionLimitedEvaporation;

                _energyLimitedEvaporation = toCopy._energyLimitedEvaporation;

                _evapoTranspirationPriestlyTaylor = toCopy._evapoTranspirationPriestlyTaylor;

                _evapoTranspirationPenman = toCopy._evapoTranspirationPenman;

                _potentialTranspiration = toCopy._potentialTranspiration;

                _conductance = toCopy._conductance;

                _soilEvaporation = toCopy._soilEvaporation;

                _potentialEvapoTranspiration = toCopy._potentialEvapoTranspiration;

                _soilHeatFlux = toCopy._soilHeatFlux;

                _cropHeatFlux = toCopy._cropHeatFlux;

                _minCanopyTemperature = toCopy._minCanopyTemperature;

                _maxCanopyTemperature = toCopy._maxCanopyTemperature;

                _evapoTranspiration = toCopy._evapoTranspiration;

                _wc3cm = toCopy._wc3cm;

                _Ntip = toCopy._Ntip;

                _netRadiationEquivalentEvaporation = toCopy._netRadiationEquivalentEvaporation;

                _hourlyTemp = new double[24];

                _hourlyCanopyTemperature = new double[24];

                _hourlyVPDair = new double[24];

                _hourlySolarRadiation = new double[24];

                _hourlyVPDairLeaf = new double[24];

                _VPDeq = new double[24];

                _RH = new double[24];

                for (int i = 0; i < 24; i++)
                {
                    _hourlyTemp[i] = toCopy._hourlyTemp[i];
                    _hourlyCanopyTemperature[i] = toCopy._hourlyCanopyTemperature[i];
                    _hourlyVPDair[i] = toCopy._hourlyVPDair[i];
                    _hourlySolarRadiation[i] = toCopy._hourlySolarRadiation[i];
                    _hourlyVPDairLeaf[i] = toCopy._hourlyVPDairLeaf[i];
                    _VPDeq[i] = toCopy._VPDeq[i];
                    _RH[i]= toCopy._RH[i];

                }

            }

        }
        #endregion
        
        #region Public properties
        /// <summary>deficitOnTopLayers</summary>
        public double deficitOnTopLayers
        {
            get
            {
                return this._deficitOnTopLayers;
            }
            set
            {
                this._deficitOnTopLayers = value;
            }
        }
        
        /// <summary>minimum air temperature</summary>
        public double minTair
        {
            get
            {
                return this._minTair;
            }
            set
            {
                this._minTair = value;
            }
        }
        
        /// <summary>maximum air temperature</summary>
        public double maxTair
        {
            get
            {
                return this._maxTair;
            }
            set
            {
                this._maxTair = value;
            }
        }
        
        /// <summary>hourly temperature</summary>
        public double[] hourlyTemp
        {
            get
            {
                return this._hourlyTemp;
            }
            set
            {
                this._hourlyTemp = value;
            }
        }
        
        /// <summary>solarRadiation</summary>
        public double solarRadiation
        {
            get
            {
                return this._solarRadiation;
            }
            set
            {
                this._solarRadiation = value;
            }
        }
        
        /// <summary>extra solar raidation</summary>
        public double extraSolarRadiation
        {
            get
            {
                return this._extraSolarRadiation;
            }
            set
            {
                this._extraSolarRadiation = value;
            }
        }
        
        /// <summary>vapor pressure</summary>
        public double vaporPressure
        {
            get
            {
                return this._vaporPressure;
            }
            set
            {
                this._vaporPressure = value;
            }
        }
        
        /// <summary>tau</summary>
        public double tau
        {
            get
            {
                return this._tau;
            }
            set
            {
                this._tau = value;
            }
        }
        
        /// <summary>hslope</summary>
        public double hslope
        {
            get
            {
                return this._hslope;
            }
            set
            {
                this._hslope = value;
            }
        }
        
        /// <summary>plant height</summary>
        public double plantHeight
        {
            get
            {
                return this._plantHeight;
            }
            set
            {
                this._plantHeight = value;
            }
        }
        
        /// <summary>wind</summary>
        public double wind
        {
            get
            {
                return this._wind;
            }
            set
            {
                this._wind = value;
            }
        }
        
        /// <summary>vpd</summary>
        public double VPDair
        {
            get
            {
                return this._VPDair;
            }
            set
            {
                this._VPDair = value;
            }
        }
        
        /// <summary>isWindVpDefined</summary>
        public int isWindVpDefined
        {
            get
            {
                return this._isWindVpDefined;
            }
            set
            {
                this._isWindVpDefined = value;
            }
        }
        
        /// <summary>elevation</summary>
        public double elevation
        {
            get
            {
                return this._elevation;
            }
            set
            {
                this._elevation = value;
            }
        }
        
        /// <summary>netRadiation</summary>
        public double netRadiation
        {
            get
            {
                return this._netRadiation;
            }
            set
            {
                this._netRadiation = value;
            }
        }
        
        /// <summary>diffusionLimitedEvaporation</summary>
        public double diffusionLimitedEvaporation
        {
            get
            {
                return this._diffusionLimitedEvaporation;
            }
            set
            {
                this._diffusionLimitedEvaporation = value;
            }
        }
        
        /// <summary>energyLimitedEvaporation</summary>
        public double energyLimitedEvaporation
        {
            get
            {
                return this._energyLimitedEvaporation;
            }
            set
            {
                this._energyLimitedEvaporation = value;
            }
        }
        
        /// <summary>evapoTranspirationPriestlyTaylor</summary>
        public double evapoTranspirationPriestlyTaylor
        {
            get
            {
                return this._evapoTranspirationPriestlyTaylor;
            }
            set
            {
                this._evapoTranspirationPriestlyTaylor = value;
            }
        }
        
        /// <summary>evapoTranspirationPenman</summary>
        public double evapoTranspirationPenman
        {
            get
            {
                return this._evapoTranspirationPenman;
            }
            set
            {
                this._evapoTranspirationPenman = value;
            }
        }
        
        /// <summary>potentialTranspiration</summary>
        public double potentialTranspiration
        {
            get
            {
                return this._potentialTranspiration;
            }
            set
            {
                this._potentialTranspiration = value;
            }
        }
        
        /// <summary>conductance</summary>
        public double conductance
        {
            get
            {
                return this._conductance;
            }
            set
            {
                this._conductance = value;
            }
        }
        
        /// <summary>soilEvaporation</summary>
        public double soilEvaporation
        {
            get
            {
                return this._soilEvaporation;
            }
            set
            {
                this._soilEvaporation = value;
            }
        }
        
        /// <summary>PotentialEvapoTranspiration</summary>
        public double potentialEvapoTranspiration
        {
            get
            {
                return this._potentialEvapoTranspiration;
            }
            set
            {
                this._potentialEvapoTranspiration = value;
            }
        }
        
        /// <summary>soilHeatFlux</summary>
        public double soilHeatFlux
        {
            get
            {
                return this._soilHeatFlux;
            }
            set
            {
                this._soilHeatFlux = value;
            }
        }
        
        /// <summary>cropHeatFlux</summary>
        public double cropHeatFlux
        {
            get
            {
                return this._cropHeatFlux;
            }
            set
            {
                this._cropHeatFlux = value;
            }
        }
        
        /// <summary>minCanopyTemperature</summary>
        public double minCanopyTemperature
        {
            get
            {
                return this._minCanopyTemperature;
            }
            set
            {
                this._minCanopyTemperature = value;
            }
        }
        
        /// <summary>maxCanopyTemperature</summary>
        public double maxCanopyTemperature
        {
            get
            {
                return this._maxCanopyTemperature;
            }
            set
            {
                this._maxCanopyTemperature = value;
            }
        }
        
        /// <summary>hourlyCanopyTemperature (maize)</summary>
        public double[] hourlyCanopyTemperature
        {
            get
            {
                return this._hourlyCanopyTemperature;
            }
            set
            {
                this._hourlyCanopyTemperature = value;
            }
        }
        
        /// <summary>evapoTranspiration</summary>
        public double evapoTranspiration
        {
            get
            {
                return this._evapoTranspiration;
            }
            set
            {
                this._evapoTranspiration = value;
            }
        }
        
        /// <summary>hourlyVPDair (maize)</summary>
        public double[] hourlyVPDair
        {
            get
            {
                return this._hourlyVPDair;
            }
            set
            {
                this._hourlyVPDair = value;
            }
        }
        
        /// <summary>hourlySolarRadiation( maize)</summary>
        public double[] hourlySolarRadiation
        {
            get
            {
                return this._hourlySolarRadiation;
            }
            set
            {
                this._hourlySolarRadiation = value;
            }
        }
        
        /// <summary>water cotent in the first 3 cm</summary>
        public double wc3cm
        {
            get
            {
                return this._wc3cm;
            }
            set
            {
                this._wc3cm = value;
            }
        }
        
        /// <summary>number of leaves (tip) (maize)</summary>
        public double Ntip
        {
            get
            {
                return this._Ntip;
            }
            set
            {
                this._Ntip = value;
            }
        }
        
        /// <summary>netRadiationEquivalentEvaporation</summary>
        public double netRadiationEquivalentEvaporation
        {
            get
            {
                return this._netRadiationEquivalentEvaporation;
            }
            set
            {
                this._netRadiationEquivalentEvaporation = value;
            }
        }
        
        /// <summary>hourly relative humidity</summary>
        public double[] RH
        {
            get
            {
                return this._RH;
            }
            set
            {
                this._RH = value;
            }
        }
        
        /// <summary>hourlyVPDairLEaf (maize)</summary>
        public double[] hourlyVPDairLeaf
        {
            get
            {
                return this._hourlyVPDairLeaf;
            }
            set
            {
                this._hourlyVPDairLeaf = value;
            }
        }
        
        /// <summary>VPDeq (maize)</summary>
        public double[] VPDeq
        {
            get
            {
                return this._VPDeq;
            }
            set
            {
                this._VPDeq = value;
            }
        }
        #endregion
        
        #region IDomainClass members
        /// <summary>Domain Class description</summary>
        public virtual  string Description
        {
            get
            {
                return "Domain class for the energy bakance component of Sirius Quality";
            }
        }
        
        /// <summary>Domain Class URL</summary>
        public virtual  string URL
        {
            get
            {
                return "http://";
            }
        }
        
        /// <summary>Domain Class Properties</summary>
        public virtual IDictionary<string, PropertyInfo> PropertiesDescription
        {
            get
            {
                return _parametersIO.GetCachedProperties(typeof(IDomainClass));
            }
        }
        #endregion
        
        /// <summary>Clears the values of the properties of the domain class by using the default value for the type of each property (e.g '0' for numbers, 'the empty string' for strings, etc.)</summary>
        public virtual Boolean ClearValues()
        {
            _deficitOnTopLayers = default(System.Double);
            _minTair = default(System.Double);
            _maxTair = default(System.Double);
            _hourlyTemp = new double[24];
            _solarRadiation = default(System.Double);
            _extraSolarRadiation = default(System.Double);
            _vaporPressure = default(System.Double);
            _tau = default(System.Double);
            _hslope = default(System.Double);
            _plantHeight = default(System.Double);
            _wind = default(System.Double);
            _VPDair = default(System.Double);
            _isWindVpDefined = default(System.Int32);
            _elevation = default(System.Double);
            _netRadiation = default(System.Double);
            _diffusionLimitedEvaporation = default(System.Double);
            _energyLimitedEvaporation = default(System.Double);
            _evapoTranspirationPriestlyTaylor = default(System.Double);
            _evapoTranspirationPenman = default(System.Double);
            _potentialTranspiration = default(System.Double);
            _conductance = default(System.Double);
            _soilEvaporation = default(System.Double);
            _potentialEvapoTranspiration = default(System.Double);
            _soilHeatFlux = default(System.Double);
            _cropHeatFlux = default(System.Double);
            _minCanopyTemperature = default(System.Double);
            _maxCanopyTemperature = default(System.Double);
            _hourlyCanopyTemperature = new double[24];
            _evapoTranspiration = default(System.Double);
            _hourlyVPDair = new double[24];
            _hourlySolarRadiation = new double[24];
            _wc3cm = default(System.Double);
            _Ntip = default(System.Double);
            _netRadiationEquivalentEvaporation = default(System.Double);
            _RH = new double[24];
            _hourlyVPDairLeaf = new double[24];
            _VPDeq = new double[24];
            // Returns true if everything is ok
            return true;
        }
        
        #region Clone
        /// <summary>Implement ICloneable.Clone()</summary>
        public virtual Object Clone()
        {
            // Shallow copy by default
            IDomainClass myclass = (IDomainClass) this.MemberwiseClone();
            _parametersIO.PopulateClonedCopy(myclass);
            return myclass;
        }
        #endregion
    }
}
